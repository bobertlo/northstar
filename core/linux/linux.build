#!/bin/sh -e

PRGNAME=linux
VERSION=${VERSION:-3.3.4}
BUILD=${BUILD:-1}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i386 ;;
       *) ARCH=$( uname -m) ;;
  esac
fi

CWD=$(pwd)
NS_DIST=${NS_DIST:-$CWD}
NS_BUILD=${NS_BUILD:-/tmp}
PKG=$NS_BUILD/package-$PRGNAME
NS_PKGDIR=${NS_PKGDIR:-$NS_BUILD}

rm -rf $PKG
mkdir -p $NS_BUILD $PKG $NS_PKGDIR
cd $NS_BUILD
rm -rf linux-$VERSION
tar xvf $NS_DIST/linux-$VERSION.tar.bz2
cd linux-$VERSION

patch -p1 < $CWD/linux-noperl-headers.patch
patch -p1 < $CWD/linux-noperl-capflags.patch
patch -p1 < $CWD/linux-noperl-timeconst.patch
patch -p1 < $CWD/linux-fixubi.patch
patch -p1 < $CWD/linux-fixsh4.patch
patch -p1 < $CWD/linux-posix-sed.patch

cp $CWD/linux.config .config

# build
make allnoconfig HOSTCC=$HOSTCC HOSTCFLAGS="-D_GNU_SOURCE" KCONFIG_ALLCONFIG=.config
make -j$MAKE_THREADS ARCH="$ARCH" CC="$CC" HOSTCC="$HOSTCC" HOSTCFLAGS=-D_GNU_SOURCE

# install
mkdir -p $PKG/boot $PKG/lib/modules $PKG/lib/firmware
make INSTALL_MOD_PATH="$PKG" modules_install
cp System.map $PKG/boot
cp arch/x86/boot/bzImage $PKG/boot/vmlinuz

cd $PKG
tar jvcf $NS_PKGDIR/$PRGNAME-$VERSION-$ARCH-$BUILD.tbz *
